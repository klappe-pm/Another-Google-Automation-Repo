name: Deploy to Google Apps Script - Diagnostic Mode

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/784508074368/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        service_account: 'github-actions-ci@workspace-automation-466800.iam.gserviceaccount.com'
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Verify Build Configuration
      run: |
        echo "=== Diagnostic Build Configuration Check ==="
        echo "Current directory: $(pwd)"
        echo "Available build files:"
        ls -la cloudbuild*.yaml || echo "No cloudbuild files found"
        echo ""
        
        if [ -f cloudbuild-diagnostic.yaml ]; then
          echo "✅ Diagnostic cloudbuild configuration exists"
          echo "File size: $(wc -c < cloudbuild-diagnostic.yaml) bytes"
        else
          echo "❌ Diagnostic cloudbuild configuration missing"
          exit 1
        fi
        
        echo "Repository structure:"
        ls -la
        
    - name: Test Cloud Build Configuration
      run: |
        echo "=== Testing Cloud Build Configuration ==="
        echo "Validating cloudbuild-diagnostic.yaml..."
        if gcloud builds submit --config=cloudbuild-diagnostic.yaml --dry-run; then
          echo "✅ Cloud Build configuration is valid"
        else
          echo "❌ Cloud Build configuration validation failed"
          exit 1
        fi
        
    - name: Execute Diagnostic Build
      run: |
        echo "=== Starting Diagnostic Cloud Build ==="
        echo "This will run our 5-step diagnostic process..."
        
        # Submit build with explicit config and no source context to avoid Docker detection
        BUILD_ID=$(gcloud builds submit \
          --config=cloudbuild-diagnostic.yaml \
          --no-source \
          --substitutions=_PROJECT_ID=workspace-automation-466800 \
          --format="value(id)")
          
        echo "Build ID: $BUILD_ID"
        echo "Build URL: https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=workspace-automation-466800"
        
        # Wait for build completion with detailed logging
        echo "Waiting for build completion..."
        if gcloud builds wait $BUILD_ID --log-http; then
          echo "✅ Diagnostic build completed successfully"
          
          # Get final build status
          gcloud builds describe $BUILD_ID --format="value(status)"
        else
          echo "❌ Diagnostic build failed"
          echo "Getting build logs..."
          gcloud builds log $BUILD_ID || echo "Could not retrieve build logs"
          exit 1
        fi
