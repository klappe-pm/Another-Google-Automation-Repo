# Google Cloud Build Configuration for Google Apps Script Deployment
# Updated configuration with improved authentication and error handling
timeout: 1800s
options:
  substitution_option: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
  
steps:
# Step 1: Verify project structure and prepare environment
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
  entrypoint: 'bash'
  args:
    - -c
    - |
      set -e
      
      echo "üîç Verifying project structure..."
      ls -la
      
      if [ ! -d "apps" ]; then
        echo "‚ùå Error: 'apps' directory not found"
        exit 1
      fi
      
      echo "‚úÖ Project structure verified"
      
      # Install Node.js and npm
      apk add --no-cache nodejs npm
      
      # Install clasp globally
      npm install -g @google/clasp
      
      echo "‚úÖ Environment setup complete"
      echo "Node.js version: $$(node --version)"
      echo "npm version: $$(npm --version)"
      echo "clasp version: $$(clasp --version)"

# Step 2: Authenticate with Google Apps Script
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
  entrypoint: 'bash'
  args:
    - -c
    - |
      set -e
      
      # Install Node.js and clasp (required in each step)
      apk add --no-cache nodejs npm
      npm install -g @google/clasp
      
      echo "üîê Setting up clasp authentication..."
      
      # Check if clasp-credentials secret exists
      if ! gcloud secrets describe clasp-credentials --project="$PROJECT_ID" > /dev/null 2>&1; then
        echo "‚ùå Error: 'clasp-credentials' secret not found in project $PROJECT_ID"
        echo "Please create the secret with: gcloud secrets create clasp-credentials --data-file=~/.clasprc.json"
        exit 1
      fi
      
      # Get clasp credentials from secret
      gcloud secrets versions access latest --secret="clasp-credentials" --project="$PROJECT_ID" > ~/.clasprc.json
      chmod 600 ~/.clasprc.json
      
      # Verify credentials file
      if [ ! -s ~/.clasprc.json ]; then
        echo "‚ùå Error: clasp credentials file is empty"
        exit 1
      fi
      
      echo "‚úÖ Clasp credentials configured"

      # Deploy all projects
      echo "üì¶ Deploying all Google Apps Script projects..."
      PROJECTS=(
        "apps/calendar" "apps/chat" "apps/docs" "apps/drive"
        "apps/gmail" "apps/photos" "apps/sheets" "apps/slides"
        "apps/tasks" "apps/utility"
      )
      
      SUCCESS_COUNT=0
      TOTAL_PROJECTS=0
      FAILED_PROJECTS=""
      
      for PROJECT_DIR in "$${PROJECTS[@]}"; do
        if [ -d "$$PROJECT_DIR" ] && [ -f "$$PROJECT_DIR/.clasp.json" ]; then
          TOTAL_PROJECTS=$$((TOTAL_PROJECTS + 1))
          echo "   -> Deploying $$PROJECT_DIR..."
          if (cd "$$PROJECT_DIR" && /usr/bin/npx clasp push --force); then
            SUCCESS_COUNT=$$((SUCCESS_COUNT + 1))
            echo "   ‚úÖ $$PROJECT_DIR deployed successfully"
          else
            FAILED_PROJECTS="$$FAILED_PROJECTS $$PROJECT_DIR"
            echo "   ‚ùå $$PROJECT_DIR deployment failed"
          fi
        else
          echo "   ‚ö†Ô∏è Skipping $$PROJECT_DIR (missing directory or .clasp.json)"
        fi
      done
      
      # Report Summary
      echo ""
      echo "================================================="
      echo "üìä DEPLOYMENT SUMMARY"
      echo "================================================="
      echo "Total projects found: $$TOTAL_PROJECTS"
      echo "‚úÖ Successful deployments: $$SUCCESS_COUNT"
      
      if [ $$SUCCESS_COUNT -eq $$TOTAL_PROJECTS ] && [ $$TOTAL_PROJECTS -gt 0 ]; then
        echo ""
        echo "üéâ ALL DEPLOYMENTS COMPLETED SUCCESSFULLY!"
      else
        echo "‚ùå Failed deployments: $$((TOTAL_PROJECTS - SUCCESS_COUNT))"
        echo "Failed projects:$$FAILED_PROJECTS"
        exit 1
      fi
