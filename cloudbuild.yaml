#
# Final, Production-Ready Cloud Build Configuration
#
timeout: 1200s # 20 minute timeout
steps:
- name: 'node:18'
  user: 'root' # <-- THE DEFINITIVE FIX: Run this entire step as the root user
  entrypoint: bash
  args:
    - -c
    - |
      # Exit immediately if any command fails
      set -e
      
      # 1. Install Google Cloud SDK (no 'sudo' needed as we are root)
      echo "üöÄ Installing dependencies and Google Cloud SDK..."
      apt-get update && apt-get install -y ca-certificates curl gnupg
      mkdir -p /etc/apt/keyrings
      curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /etc/apt/keyrings/cloud.google.gpg
      echo "deb [signed-by=/etc/apt/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" > /etc/apt/sources.list.d/google-cloud-sdk.list
      apt-get update && apt-get install -y google-cloud-sdk
      
      # 2. Add the gcloud SDK to the PATH
      export PATH=$$PATH:/usr/lib/google-cloud-sdk/bin
      echo "‚úÖ gcloud SDK installed."
      
      # 3. Install and verify clasp
      echo "üì• Installing @google/clasp..."
      npm install -g @google/clasp
      
      # 4. Authenticate and verify credentials
      echo "üîê Setting up clasp credentials..."
      gcloud secrets versions access latest --secret="clasp-credentials" --project="$PROJECT_ID" > ~/.clasprc.json
      chmod 600 ~/.clasprc.json
      if ! clasp login --status > /dev/null 2>&1; then
        echo "‚ùå Clasp authentication failed. Check the 'clasp-credentials' secret."
        exit 1
      fi
      echo "‚úÖ Clasp authentication successful"

      # 5. Deploy all projects...
      echo "üì¶ Deploying all Google Apps Script projects..."
      PROJECTS=(
        "projects/calendar" "projects/chat" "projects/docs" "projects/drive"
        "projects/gmail" "projects/photos" "projects/sheets" "projects/slides"
        "projects/tasks" "projects/utility"
      )
      
      SUCCESS_COUNT=0
      TOTAL_PROJECTS=0
      FAILED_PROJECTS=""
      
      for PROJECT_DIR in "$${PROJECTS[@]}"; do
        if [ -d "$$PROJECT_DIR" ] && [ -f "$$PROJECT_DIR/.clasp.json" ]; then
          TOTAL_PROJECTS=$$((TOTAL_PROJECTS + 1))
          echo "   -> Deploying $$PROJECT_DIR..."
          if (cd "$$PROJECT_DIR" && clasp push --force); then
            SUCCESS_COUNT=$$((SUCCESS_COUNT + 1))
          else
            FAILED_PROJECTS="$$FAILED_PROJECTS $$PROJECT_DIR"
          fi
        fi
      done
      
      # 6. Report Summary
      echo "================================================="
      echo "üìä DEPLOYMENT SUMMARY"
      echo "================================================="
      echo "Total projects found: $$TOTAL_PROJECTS"
      echo "‚úÖ Successful deployments: $$SUCCESS_COUNT"
      
      if [ $$SUCCESS_COUNT -eq $$TOTAL_PROJECTS ] && [ $$TOTAL_PROJECTS -gt 0 ]; then
        echo "üéâ ALL DEPLOYMENTS COMPLETED SUCCESSFULLY!"
      else
        echo "‚ùå Failed deployments: $$((TOTAL_PROJECTS - SUCCESS_COUNT))"
        echo "Failed projects:$$FAILED_PROJECTS"
        exit 1
      fi
options:
  substitution_option: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8